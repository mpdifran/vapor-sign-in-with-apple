//
//  AppleTokenInvalidationRequest.swift
//  SignInWithApple
//
//  Created by Mark DiFranco on 2024-12-28.
//

import Foundation
import Vapor

struct AppleTokenInvalidationRequest: Codable, Hashable, Content, Sendable {

    /// The identifier (App ID or Services ID) for your app. The identifier must not include your Team ID,
    /// to help mitigate the possiblity of exposing sensitive data to the end user. Authorization code and
    /// refresh token validation requests require this parameter.
    let clientId: String

    /// A secret JSON Web Token, generated by the developer, that uses the Sign in with Apple private key
    /// associated with your developer account. Authorization code and refresh token validation requests require
    /// this parameter.
    let clientSecret: String

    /// The token being invalidated.
    let token: String

    /// An indication of the type of token being invalidated.
    let tokenTypeHint: String

    /// Create a request to invalidate a refresh token.
    /// - parameter clientId: You app's Bundle ID or your registered Service ID.
    /// - parameter clientSecret: A secret JSON Web Token, generated by the developer, that uses the Sign in with Apple
    /// private key associated with your developer account.
    /// - parameter refreshToken: The refresh token to invalidate.
    init(
        clientId: String,
        clientSecret: String,
        refreshToken: String
    ) {
        self.clientId = clientId
        self.clientSecret = clientSecret
        self.token = refreshToken
        self.tokenTypeHint = "refresh_token"
    }

    /// Create a request to invalidate an access token.
    /// - parameter clientId: You app's Bundle ID or your registered Service ID.
    /// - parameter clientSecret: A secret JSON Web Token, generated by the developer, that uses the Sign in with Apple
    /// private key associated with your developer account.
    /// - parameter accessToken: The access token to invalidate.
    init(
        clientId: String,
        clientSecret: String,
        accessToken: String
    ) {
        self.clientId = clientId
        self.clientSecret = clientSecret
        self.token = accessToken
        self.tokenTypeHint = "access_token"
    }
}
